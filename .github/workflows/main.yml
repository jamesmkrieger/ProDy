# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on: [push, pull_request, workflow_dispatch]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        os: [ubuntu-latest, macos-latest]

    steps:
    - uses: actions/checkout@v3
    - uses: conda-incubator/setup-miniconda@v3
      with:
        miniconda-version: "latest"
        channels: conda-forge, defaults
        use-only-tar-bz2: true  # IMPORTANT: This needs to be set for caching to work properly!
        auto-update-conda: true
        auto-activate-base: true
        python-version: ${{ matrix.python-version }}
        activate-environment: test
    - name: Install dependencies
      run: |
        conda install --yes numpy scipy nose requests
        conda install --yes pdbfixer mdtraj openmm
        conda install --yes fortran-compiler cxx-compiler
        pip install mmtf-python scikit-learn
        cd prody/proteins/hpbmodule/
        gfortran -O3 -fPIC -c reg_tet.f
        variable=$(python -c 'from distutils.sysconfig import get_python_inc; print(get_python_inc())')
        c++ -O3 -g -fPIC -c hpbmodule.cpp -o hpbmodule.o -I/$variable
        c++ -shared -Wl,-soname,hpb.so -o hpb.so hpbmodule.o reg_tet.o -lgfortran
        cp hpb.so ../
        cd -
        pip install .
        python setup.py build_ext --inplace --force
    - name: Test with pytest
      run: |
        source activate test
        conda install --yes pytest
        pytest
